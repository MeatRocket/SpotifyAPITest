@using Microsoft.AspNetCore.Components.Web
@namespace SpotifyAPITest.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="SpotifyAPITest.styles.css" rel="stylesheet" />
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    @RenderBody()

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="https://sdk.scdn.co/spotify-player.js" defer></script>
    <script>
        window.onSpotifyWebPlaybackSDKReady = () => {
            const token = 'BQCTNLZDpN7sVdM9yXT7SjVrYcMVLBy3im52QyEU77SyX_r5V_878oOV_1n04JJttAobu3eW1pEGh80eeZj02nLPNIcab35uUQ0sA5Kw3c9m7KlRQg3HDOfRurBlCDE62JXV8NX6ZoZDoqU-HZ6zS6ExdW_vtmvHv_YY4SRNzSGIZuEcGGCwsDqjzmQU8cq6VYALO3w9J0W5O5NJqBnxuHOkAGc';
            const player = new Spotify.Player({
                name: 'Web Playback SDK Quick Start Player',
                getOAuthToken: cb => { cb(token); },
                volume: 0.5
            });
            player.addListener('ready', ({ device_id }) => {
                console.log('Ready with Device ID', device_id);
            });

            // Not Ready
            player.addListener('not_ready', ({ device_id }) => {
                console.log('Device ID has gone offline', device_id);
            });

            player.addListener('initialization_error', ({ message }) => {
                console.error(message);
            });

            player.addListener('authentication_error', ({ message }) => {
                console.error(message);
            });

            player.addListener('account_error', ({ message }) => {
                console.error(message);
            });

            player.connect();
        }
    </script>
    <script src="_framework/blazor.server.js"></script>
</body>
</html>
